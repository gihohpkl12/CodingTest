import java.util.Stack;

class Solution {
    public int solution(int[][] board, int[] moves) {
        Stack<Integer> machine = new Stack<>();
        int answer = 0;
        
        for(int i = 0; i < moves.length; i++) {
            int doll = pick(moves[i]-1, board);
            
            if(machine.size() != 0) {
                if(machine.peek() == doll) {
                    machine.pop();
                    answer++;
                } else 
                    machine.push(doll);
            } else 
                machine.push(doll);
        }
        
        return answer*2;
    }
    
    public int pick(int position, int[][] board) {
        int result = 0;
        
        for(int i = 0; i < board.length; i++) {
            if(board[i][position] != 0) {
                result = board[i][position];
                board[i][position] = 0;
                break;
            }
        }
        
        return result;
    }
}

