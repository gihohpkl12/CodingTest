import java.util.HashMap;
class Solution {
   public String solution(int[] numbers, String hand) {
        String answer = "";
        HashMap<Integer, int[]> phone = new HashMap<>();
        phoneSet(phone);
        int right = 12, left = 10;
        hand = hand.equals("right") ? "R" : "L";
        for(int i : numbers)
        {
            if(i == 3 || i == 6 || i == 9)
            {
                answer+="R";
                right = i;
            }else if(i == 1 || i == 4 || i == 7)
            {
                answer+="L";
                left = i;
            }
            else
            {
                answer+=distence(i,right, left, phone, hand);
                if(answer.charAt(answer.length()-1)=='R')
                    right = i;
                else
                    left = i;
            }
        }
        return answer;
    }
    public void phoneSet(HashMap<Integer, int[]> phone)
    {
        int[] coord = {1,1};
        for(int i = 1; i<=12; i++)
        {
            if(coord[1]==4)
            {
                coord[0] +=1;
                coord[1] =1;
            }
            if(i!=11)
                phone.put(i,coord.clone());
            coord[1]+=1;
        }
        phone.put(0,new int[] {4,2});
    }
    public String distence(int num, int right, int left, HashMap<Integer, int[]> phone, String hand)
    {
        int[] R = phone.get(right), L = phone.get(left), N = phone.get(num);
        int gap = ((Math.abs(R[0]-N[0]) + Math.abs(R[1]-N[1]))) - (Math.abs(L[0]-N[0]) + Math.abs(L[1]-N[1]));
        if(gap<0) return "R";
        else if(gap==0) return hand;
        return "L";
    }
}