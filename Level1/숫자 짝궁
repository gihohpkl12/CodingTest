import java.util.PriorityQueue;
import java.util.HashMap;
import java.util.Comparator;
import java.util.Collections;

class Solution {
    public String solution(String X, String Y) {
        String answer = "";
        String[] x = X.split("");
        String[] y = Y.split("");
        HashMap<String, Integer> duplicationMap = new HashMap<>();
        PriorityQueue<String> duplicationQ = new PriorityQueue<>(Collections.reverseOrder());   
        
        for(int i = 0; i < x.length; i++) {
            if(duplicationMap.containsKey(x[i])) {
                duplicationMap.replace(x[i], duplicationMap.get(x[i])+1);
            } else {
                duplicationMap.put(x[i], 1);
            }
        }
        
        for(int i = 0; i < y.length; i++) {
            if(duplicationMap.containsKey(y[i])) {
                int count = duplicationMap.get(y[i])-1;
                duplicationQ.add(y[i]);
                
                if(count == 0) {
                    duplicationMap.remove(y[i]);
                } else {
                    duplicationMap.replace(y[i], count);
                }
            }
        }
        
        if(duplicationQ.size() == 0) {
            return "-1";
        } else if(duplicationQ.peek().equals("0")) {
            return "0";
        } 
        
        StringBuilder sb = new StringBuilder();
        while(duplicationQ.size() != 0) {
            sb.append(duplicationQ.poll());
        }
        
        return sb.toString();
    }
}
