class Solution {
     int MOD = 20170805;
	 public int solution(int m, int n, int[][] cityMap) 
	 {
		 int[][] map = new int[m+1][n+1];
		 map[1][1] = 1;
		 for(int i = 1; i < map.length; i++)
		 {
			 for(int j = 1; j < map[0].length; j++)
			 {
				 if(i==1 && j ==1) continue;
				 if(cityMap[i-1][j-1] == 1)
				 {
					 map[i][j] = 0;
					 continue;
				 }
                 if((i-2>=0&&cityMap[i-2][j-1]==2) && (j-2>=0&&cityMap[i-1][j-2]==2))
                	 map[i][j] = back(cityMap,i-2,j-1,1,map)+back(cityMap,i-1,j-2,0,map);
				 else if(i-2>=0&&cityMap[i-2][j-1]==2)
					 map[i][j] = back(cityMap,i-2,j-1,1,map)+map[i][j-1];
				 else if(j-2>=0&&cityMap[i-1][j-2]==2)
					 map[i][j] = map[i-1][j]+back(cityMap,i-1,j-2,0,map);
				 else
					 map[i][j] = (map[i-1][j] + map[i][j-1]);
                  map[i][j] = map[i][j]%MOD;
			 }
		 }
		 return map[m][n];
	 }
    public int back(int[][] cityMap, int x, int y, int type, int[][] map)
	 {
		 int answer =0;
		 if(type==1)
		 {
			 for(int i =x; i>=0; i-- )
			 {
				 if(cityMap[i][y]==1)
				 {
					 answer = 0;
					 break;
				 }
				 else if(cityMap[i][y]==0)
				 {
					 answer = map[i+1][y+1];
					 break;
				 }
			 }
		 }
		 else
		 {
			 for(int i =y; i>=0; i-- )
			 {
				 if(cityMap[x][i]==1)
				 {
					 answer = 0;
					 break;
				 }
				 else if(cityMap[x][i]==0)
				 {
					 answer = map[x+1][i+1];
					 break;
				 }
			 }
		 }
		 return answer;
	 }
}