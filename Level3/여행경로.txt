import java.util.ArrayList;
import java.util.Collections;
import java.util.Comparator;
class Solution {
    ArrayList<String> List;
      public String[] solution(String[][] tickets) 
      {
            String[] answer = new String[tickets.length+1];
            boolean[] check = new boolean[tickets.length];

            List = new ArrayList<>();
            ArrayList<String> list = new ArrayList<String>();

            list.add("ICN");
            dfs(tickets, list, check, "ICN" );

            for(int i =0; i <List.size(); i++)
                answer[i] = List.get(i);

            return answer;
      }
      public void dfs(String[][] tickets, ArrayList<String> list, boolean[] check, String start)
      {
          if(List.size()!=0)
              return;
          if(list.size()==(tickets.length+1) )
          {
              for(String i : list)
                  List.add(i);
              return;
          }
          ArrayList<plan> temp = new ArrayList<>();
          ArrayList<String> tempList = (ArrayList<String>)list.clone();
          for(int i =0; i< tickets.length; i++)
          {
              if(tickets[i][0].equals(start) && !check[i])
              {
                  plan plan = new plan(tickets[i][1], i);
                  temp.add(plan);
              }
          }
          if(temp.size()==0)
              return;
          Collections.sort(temp, new Comparator<plan>() 
          {
              public int compare(plan o1, plan o2)
              {
                  int gap = o1.city.compareTo(o2.city);
                  return gap;
              }
          });

          for(int i =0; i<temp.size(); i++)
          {
              tempList.add(temp.get(i).city);
              check[temp.get(i).index] = true;
              dfs(tickets,tempList,check,temp.get(i).city);
              check[temp.get(i).index] = false;
              tempList.remove(tempList.size()-1);
          }
      }
      class plan
      {
          String city;
          int index;
          public plan(String city, int index)
          {
              this.city = city;
              this.index = index;
          }
      }
}