import java.util.ArrayList;  
import java.util.Arrays;
class Solution {
public int solution(int n, int m, int[][] edge_list, int k, int[] gps_log)
	{
		int answer = 987654321;
		int[][] dp = new int[n+1][n+1];
		ArrayList<Integer>[] map = new ArrayList[n+1];
		
		for(int[] a : dp)
			Arrays.fill(a, 987654321);
		for(int i = 0; i< map.length; i++)
			map[i] = new ArrayList<>();
    
		for(int i = 0; i< edge_list.length; i++)
		{
			int start = edge_list[i][0], end = edge_list[i][1];
			map[start].add(end);
			map[end].add(start);
		}
		dp[0][gps_log[0]] = 0;
		
		for(int i = 1; i< gps_log.length-1; i++)
		{
			for(int j = 1; j<=n; j++)
			{
				int add = gps_log[i]==j ? 0 : 1;
				dp[i][j] = Math.min( dp[i-1][j]+add, dp[i][j]);
				for(int q : map[j])
					dp[i][j] = Math.min(dp[i][j], dp[i-1][q]+add);
			}
		}
		for(int p : map[gps_log[k-1]]) {
	            answer = Math.min(answer, dp[gps_log.length-2][p]);
	        }
			
		return answer!=987654321 ? answer : -1;
	}
}