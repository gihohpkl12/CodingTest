import java.util.PriorityQueue;
import java.util.Collections;
class Solution {
    public long solution(int n, int[] works) {
        long answer = 0;
        PriorityQueue<Integer> Q = new PriorityQueue<Integer>(Collections.reverseOrder());
        for(int i : works)
        	Q.add(i);
        while(Q.size()!=0 && n>0)
        {
        	int work = Q.poll();
        	if(work>0)
        	{
        		Q.add(work-1);
        		n--;
        	}
        }
        if(Q.size()==0)
        	return 0;
        while(Q.size()!=0)
        {
        	int work = Q.poll();
        	answer += work*work;
        }
        return answer;
    }
}