class Solution
{
    public int solution(String s)
    {
		int answer = s.length()==0? 0 : 1;
		String[] sArr = s.split("");
		for(int i = 1; i<= sArr.length-1; i++)
		{
			
			if(i+1<=sArr.length-1 && sArr[i-1].equals(sArr[i+1]) || i+1<=sArr.length-1 && sArr[i].equals(sArr[i+1]))
			{
				if(sArr[i-1].equals(sArr[i+1]))
				{
					int temp = palindrome(1,i,sArr);
					answer = temp>answer ? temp : answer;
				}
				if(sArr[i].equals(sArr[i+1]))
				{
					int temp = palindrome(2,i,sArr);
					answer = temp>answer ? temp : answer;
				}
			}
		}
		return answer;
    }
	public int palindrome(int type, int index, String[] s)
	{
		int length=1;
		int gap =1;
		if(type==1)
		{
			while(true)
			{
				if(index-gap>=0 && index+gap<=s.length-1)
				{
					if(s[index-gap].equals(s[index+gap]))
					{
						length = (index+gap) - (index-gap)+1;
						gap++;
					}
					else
						break;
				}
				else
					break;
			}
		}
		else if(type==2)
		{
			length =2;
			gap = 0;
			while(true)
			{
				if(index-gap>=0 && index+gap+1<=s.length-1)
				{
					if(s[index+gap+1].equals(s[index-gap]))
					{
						length = (index+gap+1) -(index-gap) +1;
						gap ++;
					}else
						break;
				}
				else 
					break;
			}
		}
		return length;
	}
}