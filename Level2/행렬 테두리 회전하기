import java.util.ArrayList;

class Solution {
    public int[] solution(int rows, int columns, int[][] queries) {
        int[] answer = new int[queries.length];
        int[][] totalArr = new int[rows+1][columns+1];
        int num = 1, answerIndex = 0;
        
        for(int i = 1; i < totalArr.length; i++) {
            for(int j = 1; j < totalArr[0].length; j++) {
                totalArr[i][j] = num;
                num++;
            }
        }
        
        for(int[] arr : queries) {
            int[][] vertex = {{arr[0], arr[3]}, {arr[2], arr[3]}, {arr[2], arr[1]}, {arr[0], arr[1]}};
            int[] cur = new int[] {arr[0], arr[1]};
            int preValue = totalArr[arr[0]][arr[1]];
            int index = 0;
            int min = Integer.MAX_VALUE;
            
            while(index != 3 || cur[0] != arr[0] || cur[1] != arr[1]) {
                if(cur[0] == vertex[index][0] && cur[1] == vertex[index][1]) {
                    index++;
                    cur = indexChange(index, cur[0], cur[1]);
                } else {
                    cur = indexChange(index, cur[0], cur[1]);
                }
                min = preValue < min ? preValue : min;
                int temp = totalArr[cur[0]][cur[1]];
                totalArr[cur[0]][cur[1]] = preValue;
                preValue = temp;
            }
            
            answer[answerIndex] = min;
            answerIndex++;
        }
        
        return answer;
    }
    
    public int[] indexChange(int index, int curX, int curY) {
        if(index == 0){
            curY++;
        } else if(index == 1) {
            curX++;
        } else if(index == 2) {
            curY--;
        } else if(index == 3) {
            curX--;
        }
        
        return new int[] {curX, curY};
    }
}
