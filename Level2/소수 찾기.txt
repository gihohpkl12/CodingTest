import java.util.HashMap;
import java.util.ArrayList;

class Solution {
static HashMap<String, String> map = new HashMap<>();
	public int solution(String numbers) {
        int answer = 0;
        HashMap<Integer, String> map2 = new HashMap<>();
        String[] temp = numbers.split("");
        ArrayList<String> list = new ArrayList<>();
        
        for(String a : temp)
        {
        	list.add(a);
        }
        make_combination(list,"");

        for(String a : map.keySet()) 
        {
        	int check_num = Integer.parseInt(a);
        	if(!map2.containsKey(check_num))
        	{
        		map2.put(check_num,"");
        		if(find_sosu(Integer.parseInt(a)))
            		 answer +=1;
        	}
        }
        
        return answer;
    }
	
	public static void make_combination(ArrayList<String> list, String pre)
	{
		if(list.size()==0)
		{
			return;
		}
		for(int i=0; i<list.size(); i++)
		{
			String temp = list.get(i);
			if(!map.containsKey(pre+temp)) map.put(pre+temp,"");
			list.remove(i);
			make_combination(list,pre+temp);
			list.add(i,temp);
		}
	}
	public static boolean find_sosu(int num)
	{
		if(num == 1 || num == 0) return false;
		for(int i=2; i<num; i++)
		{
			if(num % i == 0) return false;
		}
		return true;
	}
}