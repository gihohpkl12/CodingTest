import java.util.ArrayList;
class Solution {
    public long solution(String expression) {
        long answer = Integer.MIN_VALUE;
        ArrayList<Long> List = new ArrayList<>();
        ArrayList<String> oper = new ArrayList<>();
        ArrayList<String> com = new ArrayList<>();
        if(expression.contains("*"))
        	oper.add("*");
        if(expression.contains("+"))
        	oper.add("+"); 
        if(expression.contains("-"))
        	oper.add("-");
        com(oper, "",com, oper.size());
        makeList(List, expression);

        for(int i = 0; i<com.size(); i++)
        {
        	ArrayList<Long> list = (ArrayList<Long>) List.clone();
        	String[] ex = com.get(i).split("");
        	for(String j : ex)
        	{
        		long E = 0;
        		if(j.equals("*")) E = Integer.MAX_VALUE-1;
        		else if(j.equals("+")) E = Integer.MAX_VALUE-2;
        		else E = Integer.MAX_VALUE-3;
        		while(list.contains(E))
        		{
        			int index = list.indexOf(E);
        			if(E==Integer.MAX_VALUE-1)
        				list.set(index, list.get(index-1)*list.get(index+1));
        			else if(E==Integer.MAX_VALUE-2)
        				list.set(index, list.get(index-1)+list.get(index+1));
        			else
        				list.set(index, list.get(index-1)-list.get(index+1));
        			list.remove(index-1);
        			list.remove(index);
        		}
        	}
        	answer = answer<Math.abs(list.get(0)) ? Math.abs(list.get(0)) : answer;
        }
        return answer;
        
    }
    public void makeList(ArrayList<Long> list, String e)
    {
        String num = "";
        for(int i = 0; i<e.length(); i++)
        {
            if(e.charAt(i)!='-' && e.charAt(i)!='*' && e.charAt(i)!='+')
                num+=e.substring(i,i+1);
            else
            {
                list.add(Long.parseLong(num));
                if(e.charAt(i)=='*')
                    list.add((long)Integer.MAX_VALUE-1);
                else if(e.charAt(i)=='+')
                    list.add((long)Integer.MAX_VALUE-2);
                else
                    list.add((long)Integer.MAX_VALUE-3);
                num="";
            }
            if(i==e.length()-1)
            	list.add(Long.parseLong(num));

        }
    }
    public void com(ArrayList<String> oper, String temp, ArrayList<String> com, int len)
    {
    	if(temp.length()==len)
    	{
    		com.add(temp);
    		return;
    	}
    	else
    	{
    		ArrayList<String> operTemp = (ArrayList<String>)oper.clone();
    		for(int i = 0; i<operTemp.size(); i++)
    		{
    			String making = temp+operTemp.get(i);
    			operTemp.remove(i);
    			com(operTemp, making, com, len);
    			operTemp.add(i, making.substring(making.length()-1, making.length()));
    		}
    	}
    }
}